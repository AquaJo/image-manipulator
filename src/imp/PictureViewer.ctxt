#BlueJ class context
comment0.target=PictureViewer
comment1.params=
comment1.target=PictureViewer()
comment1.text=\r\n\ Erzeugt\ ein\ ScrollPanel\ mit\ integriertem\ Bild\ der\ Gr\u00F6\u00DFe\ 1000x1000\r\n
comment10.params=
comment10.target=void\ back()
comment10.text=\r\n\ Ruft\ das\ letzte\ abgespeicherte\ Bild\ aus\ der\ History\ wieder\ auf.\r\n
comment11.params=
comment11.target=void\ repaint()
comment11.text=\r\n\ Setzt\ das\ angezeigt\ Bild\ neu\ und\ beachtet\ dabei\ den\ Zoomfaktor.\r\n
comment12.params=factor
comment12.target=void\ setZoom(double)
comment12.text=\r\n\ Setzt\ den\ Zoom-Faktor\ f\u00FCr\ das\ Bild.\r\n\ Als\ Zoomfaktor\ sind\ auch\ die\ Konstanten\ Bildanzeiger.FIT\ (auf\ Bildschirmgr\u00F6\u00DFe\ zoomen)\ und\ Bildanzeiger.NORMAL\ (100%)\ m\u00F6glich.\r\n\ @param\ factor\ Zoomfaktor\ (1.0\ \=\ 100%).\ \r\n
comment2.params=width\ height
comment2.target=PictureViewer(int,\ int)
comment2.text=\r\n\ Erzeugt\ ein\ ScrollPanel\ mit\ integriertem\ Bild\ der\ angegebenen\ Gr\u00F6\u00DFe\ \r\n\ @param\ width\ Breite\ des\ Bildes\r\n\ @param\ height\ H\u00F6he\ des\ Bildes\r\n
comment3.params=width\ height\ background
comment3.target=PictureViewer(int,\ int,\ java.lang.String)
comment3.text=\r\n\ Erzeugt\ ein\ ScrollPanel\ mit\ integriertem\ Bild\ der\ angegebenen\ Gr\u00F6\u00DFe\ \r\n\ @param\ width\ Breite\ des\ Bildes\r\n\ @param\ height\ H\u00F6he\ des\ Bildes\r\n\ @param\ background\ Farbe\ des\ Hintergrunds\ als\ HEX-String\ (z.B.\ "FF3A45")\r\n
comment4.params=filename
comment4.target=PictureViewer(java.lang.String)
comment4.text=\r\n\ Erzeugt\ ein\ ScrollPanel\ mit\ integriertem\ Bild\ aus\ einer\ Bilddatei\r\n\ @param\ filename\ Name\ des\ Bildes\r\n
comment5.params=picture
comment5.target=PictureViewer(Picture)
comment5.text=\r\n\ Erzeugt\ ein\ ScrollPanel\ und\ zeigt\ das\ Bild-Objekt\ an\r\n\ @param\ picture\ anzuzeigendes\ Bild\r\n
comment6.params=picture\ saveOldImage
comment6.target=void\ setImage(Picture,\ boolean)
comment6.text=\r\n\ Setzt\ das\ anzuzeigende\ Bild\ neu\r\n\ @param\ picture\ anzuzeigendes\ Bild\r\n\ @param\ saveOldImage\ soll\ das\ aktuelle\ Bild\ in\ der\ Historie\ gespeichert\ werden\r\n
comment7.params=
comment7.target=Picture\ getImage()
comment7.text=\r\n\ Liefert\ das\ angezeigte\ Bild\r\n\ @return\ angezeigtes\ Bild\r\n
comment8.params=bi
comment8.target=java.awt.image.BufferedImage\ deepCopy(java.awt.image.BufferedImage)
comment8.text=\ \r\n\ Erzeugt\ eine\ Kopie\ eines\ BufferedImage.\r\n\ @param\ Originalbild\r\n\ @return\ Kopie\ des\ Bildes\r\n
comment9.params=
comment9.target=void\ pushImage()
comment9.text=\r\n\ Speichert\ das\ \u00FCbergebene\ Bild\ in\ der\ History.\r\n\ @param\ b\ zu\ speicherndes\ Bild\r\n
numComments=13
